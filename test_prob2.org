#+TITLE: Problem 2 Banlet Linebreaks, Fonts, main()
#+TESTY: PREFIX="prob2"
//#+TESTY: USE_VALGRIND=1

* print_fontified_linebreak_1
#+TESTY: program='./test_banlet_funcs2 print_fontified_linebreak_1'
#+BEGIN_SRC sh
{
    // Tests print_fontified_linebreak function with builtin font_standard
    char *string;
    string =
"apple\n\
B@N@N@\n\
Carr0^";
    print_fontified_linebreaks(string, &font_standard);
}
                      _       
  __ _  _ __   _ __  | |  ___ 
 / _` || '_ \ | '_ \ | | / _ \
| (_| || |_) || |_) || ||  __/
 \__,_|| .__/ | .__/ |_| \___|
       |_|    |_|             
 ____     ____   _   _    ____   _   _    ____  
| __ )   / __ \ | \ | |  / __ \ | \ | |  / __ \ 
|  _ \  / / _` ||  \| | / / _` ||  \| | / / _` |
| |_) || | (_| || |\  || | (_| || |\  || | (_| |
|____/  \ \__,_||_| \_| \ \__,_||_| \_| \ \__,_|
         \____/          \____/          \____/ 
  ____                      ___   /\ 
 / ___|  __ _  _ __  _ __  / _ \ |/\|
| |     / _` || '__|| '__|| | | |    
| |___ | (_| || |   | |   | |_| |    
 \____| \__,_||_|   |_|    \___/     
                                     
#+END_SRC

* print_fontified_linebreak_2
#+TESTY: program='./test_banlet_funcs2 print_fontified_linebreak_2'
#+BEGIN_SRC sh
{
    // Tests print_fontified_linebreak function with builtin font_standard
    char *string;
    string =
"The quick brown fox\n\
jumps OVER the lazy\n\
dog.";
    print_fontified_linebreaks(string, &font_standard);
}
 _____  _                            _        _       _                                       __              
|_   _|| |__    ___     __ _  _   _ (_)  ___ | | __  | |__   _ __   ___  __      __ _ __     / _|  ___  __  __
  | |  | '_ \  / _ \   / _` || | | || | / __|| |/ /  | '_ \ | '__| / _ \ \ \ /\ / /| '_ \   | |_  / _ \ \ \/ /
  | |  | | | ||  __/  | (_| || |_| || || (__ |   <   | |_) || |   | (_) | \ V  V / | | | |  |  _|| (_) | >  < 
  |_|  |_| |_| \___|   \__, | \__,_||_| \___||_|\_\  |_.__/ |_|    \___/   \_/\_/  |_| |_|  |_|   \___/ /_/\_\
                          |_|                                                                                 
   _                                   ___  __     __ _____  ____     _    _              _                    
  (_) _   _  _ __ ___   _ __   ___    / _ \ \ \   / /| ____||  _ \   | |_ | |__    ___   | |  __ _  ____ _   _ 
  | || | | || '_ ` _ \ | '_ \ / __|  | | | | \ \ / / |  _|  | |_) |  | __|| '_ \  / _ \  | | / _` ||_  /| | | |
  | || |_| || | | | | || |_) |\__ \  | |_| |  \ V /  | |___ |  _ <   | |_ | | | ||  __/  | || (_| | / / | |_| |
 _/ | \__,_||_| |_| |_|| .__/ |___/   \___/    \_/   |_____||_| \_\   \__||_| |_| \___|  |_| \__,_|/___| \__, |
|__/                   |_|                                                                               |___/ 
     _                  
  __| |  ___    __ _    
 / _` | / _ \  / _` |   
| (_| || (_) || (_| | _ 
 \__,_| \___/  \__, |(_)
               |___/    
#+END_SRC

* print_fontified_linebreak_3
#+TESTY: program='./test_banlet_funcs2 print_fontified_linebreak_3'
#+BEGIN_SRC sh
{
    // Tests print_fontified_linebreak function with builtin font_standard
    char *string;
    string =
" !\"#$%&'()\n\
*+,-./0123\n\
456789:;<=\n\
>?@ABCDEFG\n\
HIJKLMNOPQ\n\
RSTUVWXYZ[\n\
\\]^_`abcde\n\
fghijklmno\n\
pqrstuvwxy\n\
z{|}~";
    print_fontified_linebreaks(string, &font_standard);
}
   _  _ _    _  _     _   _  __  ___    _   ____  
  | |( | ) _| || |_  | | (_)/ / ( _ )  ( ) / /\ \ 
  | | V V |_  ..  _|/ __)  / /  / _ \/\|/ | |  | |
  |_|     |_      _|\__ \ / /_ | (_>  <   | |  | |
  (_)       |_||_|  (   //_/(_) \___/\/   | |  | |
                     |_|                   \_\/_/ 
                              __  ___   _  ____   _____ 
__/\__   _                   / / / _ \ / ||___ \ |___ / 
\    / _| |_     _____      / / | | | || |  __) |  |_ \ 
/_  _\|_   _| _ |_____| _  / /  | |_| || | / __/  ___) |
  \/    |_|  ( )       (_)/_/    \___/ |_||_____||____/ 
             |/                                         
 _  _    ____    __    _____   ___    ___          __       
| || |  | ___|  / /_  |___  | ( _ )  / _ \  _  _  / / _____ 
| || |_ |___ \ | '_ \    / /  / _ \ | (_) |(_)(_)/ / |_____|
|__   _| ___) || (_) |  / /  | (_) | \__, | _  _ \ \ |_____|
   |_|  |____/  \___/  /_/    \___/    /_/ (_)( ) \_\       
                                              |/            
__   ___    ____      _     ____    ____  ____   _____  _____   ____ 
\ \ |__ \  / __ \    / \   | __ )  / ___||  _ \ | ____||  ___| / ___|
 \ \  / / / / _` |  / _ \  |  _ \ | |    | | | ||  _|  | |_   | |  _ 
 / / |_| | | (_| | / ___ \ | |_) || |___ | |_| || |___ |  _|  | |_| |
/_/  (_)  \ \__,_|/_/   \_\|____/  \____||____/ |_____||_|     \____|
           \____/                                                    
 _   _  ___      _  _  __ _      __  __  _   _   ___   ____    ___  
| | | ||_ _|    | || |/ /| |    |  \/  || \ | | / _ \ |  _ \  / _ \ 
| |_| | | |  _  | || ' / | |    | |\/| ||  \| || | | || |_) || | | |
|  _  | | | | |_| || . \ | |___ | |  | || |\  || |_| ||  __/ | |_| |
|_| |_||___| \___/ |_|\_\|_____||_|  |_||_| \_| \___/ |_|     \__\_\
                                                                    
 ____   ____   _____  _   _ __     ____        ____  ____   __ _____ __ 
|  _ \ / ___| |_   _|| | | |\ \   / /\ \      / /\ \/ /\ \ / /|__  /| _|
| |_) |\___ \   | |  | | | | \ \ / /  \ \ /\ / /  \  /  \ V /   / / | | 
|  _ <  ___) |  | |  | |_| |  \ V /    \ V  V /   /  \   | |   / /_ | | 
|_| \_\|____/   |_|   \___/    \_/      \_/\_/   /_/\_\  |_|  /____|| | 
                                                                    |__|
__     __  /\         _         _                _       
\ \   |_ ||/\|       ( )  __ _ | |__    ___   __| |  ___ 
 \ \   | |            \| / _` || '_ \  / __| / _` | / _ \
  \ \  | |              | (_| || |_) || (__ | (_| ||  __/
   \_\ | |     _____     \__,_||_.__/  \___| \__,_| \___|
      |__|    |_____|                                    
  __         _      _    _  _     _                          
 / _|  __ _ | |__  (_)  (_)| | __| | _ __ ___   _ __    ___  
| |_  / _` || '_ \ | |  | || |/ /| || '_ ` _ \ | '_ \  / _ \ 
|  _|| (_| || | | || |  | ||   < | || | | | | || | | || (_) |
|_|   \__, ||_| |_||_| _/ ||_|\_\|_||_| |_| |_||_| |_| \___/ 
      |___/           |__/                                   
                          _                                        
 _ __    __ _  _ __  ___ | |_  _   _ __   ____      ____  __ _   _ 
| '_ \  / _` || '__|/ __|| __|| | | |\ \ / /\ \ /\ / /\ \/ /| | | |
| |_) || (_| || |   \__ \| |_ | |_| | \ V /  \ V  V /  >  < | |_| |
| .__/  \__, ||_|   |___/ \__| \__,_|  \_/    \_/\_/  /_/\_\ \__, |
|_|        |_|                                               |___/ 
        __ _ __    /\/|
 ____  / /| |\ \  |/\/ 
|_  / | | | | | |      
 / / < <  | |  > >     
/___| | | | | | |      
       \_\|_|/_/       
#+END_SRC

* load_font_1
#+TESTY: program='./test_banlet_funcs2 load_font_1'
#+BEGIN_SRC sh
{
    // Tests load_font() on the font_standard.txt file
    // ALSO checks that free_font() function deallocates.
    char *font_file = "data/font_standard.txt";
    font_t *font = font_load(font_file);
    char *string =
" !\"#$%&'()\n\
*+,-./0123\n\
456789:;<=\n\
>?@ABCDEFG\n\
HIJKLMNOPQ\n\
RSTUVWXYZ[\n\
\\]^_`abcde\n\
fghijklmno\n\
pqrstuvwxy\n\
z{|}~";
    print_fontified_linebreaks(string, font);
    font_free(font);
}
   _  _ _    _  _     _   _  __  ___    _   ____  
  | |( | ) _| || |_  | | (_)/ / ( _ )  ( ) / /\ \ 
  | | V V |_  ..  _|/ __)  / /  / _ \/\|/ | |  | |
  |_|     |_      _|\__ \ / /_ | (_>  <   | |  | |
  (_)       |_||_|  (   //_/(_) \___/\/   | |  | |
                     |_|                   \_\/_/ 
                              __  ___   _  ____   _____ 
__/\__   _                   / / / _ \ / ||___ \ |___ / 
\    / _| |_     _____      / / | | | || |  __) |  |_ \ 
/_  _\|_   _| _ |_____| _  / /  | |_| || | / __/  ___) |
  \/    |_|  ( )       (_)/_/    \___/ |_||_____||____/ 
             |/                                         
 _  _    ____    __    _____   ___    ___          __       
| || |  | ___|  / /_  |___  | ( _ )  / _ \  _  _  / / _____ 
| || |_ |___ \ | '_ \    / /  / _ \ | (_) |(_)(_)/ / |_____|
|__   _| ___) || (_) |  / /  | (_) | \__, | _  _ \ \ |_____|
   |_|  |____/  \___/  /_/    \___/    /_/ (_)( ) \_\       
                                              |/            
__   ___    ____      _     ____    ____  ____   _____  _____   ____ 
\ \ |__ \  / __ \    / \   | __ )  / ___||  _ \ | ____||  ___| / ___|
 \ \  / / / / _` |  / _ \  |  _ \ | |    | | | ||  _|  | |_   | |  _ 
 / / |_| | | (_| | / ___ \ | |_) || |___ | |_| || |___ |  _|  | |_| |
/_/  (_)  \ \__,_|/_/   \_\|____/  \____||____/ |_____||_|     \____|
           \____/                                                    
 _   _  ___      _  _  __ _      __  __  _   _   ___   ____    ___  
| | | ||_ _|    | || |/ /| |    |  \/  || \ | | / _ \ |  _ \  / _ \ 
| |_| | | |  _  | || ' / | |    | |\/| ||  \| || | | || |_) || | | |
|  _  | | | | |_| || . \ | |___ | |  | || |\  || |_| ||  __/ | |_| |
|_| |_||___| \___/ |_|\_\|_____||_|  |_||_| \_| \___/ |_|     \__\_\
                                                                    
 ____   ____   _____  _   _ __     ____        ____  ____   __ _____ __ 
|  _ \ / ___| |_   _|| | | |\ \   / /\ \      / /\ \/ /\ \ / /|__  /| _|
| |_) |\___ \   | |  | | | | \ \ / /  \ \ /\ / /  \  /  \ V /   / / | | 
|  _ <  ___) |  | |  | |_| |  \ V /    \ V  V /   /  \   | |   / /_ | | 
|_| \_\|____/   |_|   \___/    \_/      \_/\_/   /_/\_\  |_|  /____|| | 
                                                                    |__|
__     __  /\         _         _                _       
\ \   |_ ||/\|       ( )  __ _ | |__    ___   __| |  ___ 
 \ \   | |            \| / _` || '_ \  / __| / _` | / _ \
  \ \  | |              | (_| || |_) || (__ | (_| ||  __/
   \_\ | |     _____     \__,_||_.__/  \___| \__,_| \___|
      |__|    |_____|                                    
  __         _      _    _  _     _                          
 / _|  __ _ | |__  (_)  (_)| | __| | _ __ ___   _ __    ___  
| |_  / _` || '_ \ | |  | || |/ /| || '_ ` _ \ | '_ \  / _ \ 
|  _|| (_| || | | || |  | ||   < | || | | | | || | | || (_) |
|_|   \__, ||_| |_||_| _/ ||_|\_\|_||_| |_| |_||_| |_| \___/ 
      |___/           |__/                                   
                          _                                        
 _ __    __ _  _ __  ___ | |_  _   _ __   ____      ____  __ _   _ 
| '_ \  / _` || '__|/ __|| __|| | | |\ \ / /\ \ /\ / /\ \/ /| | | |
| |_) || (_| || |   \__ \| |_ | |_| | \ V /  \ V  V /  >  < | |_| |
| .__/  \__, ||_|   |___/ \__| \__,_|  \_/    \_/\_/  /_/\_\ \__, |
|_|        |_|                                               |___/ 
        __ _ __    /\/|
 ____  / /| |\ \  |/\/ 
|_  / | | | | | |      
 / / < <  | |  > >     
/___| | | | | | |      
       \_\|_|/_/       
#+END_SRC

* load_font_2
#+TESTY: program='./test_banlet_funcs2 load_font_2'
#+BEGIN_SRC sh
{
    // Tests load_font() on the font_mini.txt file
    // ALSO checks that free_font() function deallocates.
    char *font_file = "data/font_mini.txt";
    font_t *font = font_load(font_file);
    char *string =
" !\"#$%&'()\n\
*+,-./0123\n\
456789:;<=\n\
>?@ABCDEFG\n\
HIJKLMNOPQ\n\
RSTUVWXYZ[\n\
\\]^_`abcde\n\
fghijklmno\n\
pqrstuvwxy\n\
z{|}~";
    print_fontified_linebreaks(string, font);
    font_free(font);
}
            _          
  |||-|-|-(| O/() / /\ 
  o  -|-|-_|)/O(_X |  |
                    \/ 
             _   _ _ 
\|/_|_ __  // \/| )_)
/|\ | o  o/ \_/ |/__)
      /              
     _  _ __ _  _      
|_|_|_ |_  /(_)(_|oo/--
  |  _)|_)/ (_)  |oo\--
                   /   
 _   __      _  _ _  _ _ __
\ ) /  \ /\ |_)/ | \|_|_/__
/o | (|//--\|_)\_|_/|_| \_|
    \__                    
   ___                _  _  _ 
|_| |   ||/| |\/||\ |/ \|_)/ \
| |_|_\_||\|_|  || \|\_/|  \_X
                              
 _  _____                  __ _
|_)(_  | | |\  /\    /\/\_/ /| 
| \__) | |_| \/  \/\/ /\ | /_|_
                               
  _ /\                 
\  |    \ _.|_  _ _| _ 
 \_|     (_||_)(_(_|(/_
      __               
  _                       
_|_ _ |_ o o| |._ _ ._  _ 
 | (_|| || ||<|| | || |(_)
    _|    _|              
                          
._  _.._ __|_             
|_)(_|| _> |_|_|\/\/\/><\/
|    |                  / 
   ,-|-. /\/
_ _| | |_   
/_ | | |    
   `-|-'    
#+END_SRC

* load_font_3
#+TESTY: program='./test_banlet_funcs2 load_font_3'
#+BEGIN_SRC sh
{
    // Tests load_font() on the font_capsonly.txt file.
    // This font does not have all ASCII codepoints defined
    // so some of the glyphs will appear as defaults / XXXs.
    char *font_file = "data/font_capsonly.txt";
    font_t *font = font_load(font_file);
    char *string =
" ! \" # $ % & ' ( )\n\
+ * , - . / 0 1 2 3\n\
4 5 6 7 8 9 : ; < =\n\
> ? @ A B C D E F G\n\
H I J K L M N O P Q\n\
R S T U V W X Y Z [\n\
\\ ] ^ _ ` a b c d e\n\
f g h i j k l m n o\n\
p q r s t u v w x y\n\
z { | } ~";
    print_fontified_linebreaks(string, font);
    font_free(font);
}
   _   34XXXX  35XXXX  36XXXX  37XXXX  38XXXX  39XXXX  40XXXX  41XXXX
  | |  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
  | |  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
  |_|  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
  (_)  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
       XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
43XXXX  42XXXX  44XXXX  45XXXX  46XXXX  47XXXX  48XXXX  49XXXX  50XXXX  51XXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
52XXXX  53XXXX  54XXXX  55XXXX  56XXXX  57XXXX       59XXXX  60XXXX  61XXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX   _   XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  (_)  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX   _   XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  (_)  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX       XXXXXX  XXXXXX  XXXXXX
62XXXX  63XXXX  64XXXX      _       ____      ____    ____     _____    _____     ____ 
XXXXXX  XXXXXX  XXXXXX     / \     | __ )    / ___|  |  _ \   | ____|  |  ___|   / ___|
XXXXXX  XXXXXX  XXXXXX    / _ \    |  _ \   | |      | | | |  |  _|    | |_     | |  _ 
XXXXXX  XXXXXX  XXXXXX   / ___ \   | |_) |  | |___   | |_| |  | |___   |  _|    | |_| |
XXXXXX  XXXXXX  XXXXXX  /_/   \_\  |____/    \____|  |____/   |_____|  |_|       \____|
XXXXXX  XXXXXX  XXXXXX                                                                 
 _   _    ___        _    _  __   _        __  __    _   _     ___     ____      ___  
| | | |  |_ _|      | |  | |/ /  | |      |  \/  |  | \ | |   / _ \   |  _ \    / _ \ 
| |_| |   | |    _  | |  | ' /   | |      | |\/| |  |  \| |  | | | |  | |_) |  | | | |
|  _  |   | |   | |_| |  | . \   | |___   | |  | |  | |\  |  | |_| |  |  __/   | |_| |
|_| |_|  |___|   \___/   |_|\_\  |_____|  |_|  |_|  |_| \_|   \___/   |_|       \__\_\
                                                                                      
 ____     ____     _____    _   _   __     __  __        __  __  __  __   __   _____  91XXXX
|  _ \   / ___|   |_   _|  | | | |  \ \   / /  \ \      / /  \ \/ /  \ \ / /  |__  /  XXXXXX
| |_) |  \___ \     | |    | | | |   \ \ / /    \ \ /\ / /    \  /    \ V /     / /   XXXXXX
|  _ <    ___) |    | |    | |_| |    \ V /      \ V  V /     /  \     | |     / /_   XXXXXX
|_| \_\  |____/     |_|     \___/      \_/        \_/\_/     /_/\_\    |_|    /____|  XXXXXX
                                                                                      XXXXXX
92XXXX  93XXXX  94XXXX  95XXXX  96XXXX  97XXXX  98XXXX  99XXXX  100XXX  101XXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
102XXX  103XXX  104XXX  105XXX  106XXX  107XXX  108XXX  109XXX  110XXX  111XXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
112XXX  113XXX  114XXX  115XXX  116XXX  117XXX  118XXX  119XXX  120XXX  121XXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
122XXX  123XXX  124XXX  125XXX  126XXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
#+END_SRC

* load_font_4
#+TESTY: program='./test_banlet_funcs2 load_font_4'
#+BEGIN_SRC sh
{
    // Tests taht load_font() returns NULL if font is not found
    char *font_file = "data/no_such_font.txt.txt";
    font_t *font = font_load(font_file);
    if(font != NULL){
      printf("What the deuce just happened?\n");
    }
    else{
      printf("NULL returned correctly\n");
    }
}
NULL returned correctly
#+END_SRC

* banlet_main hello world
Runs banlet_main with the builtin standard font to print 'Hello world!'
#+TESTY: program='./banlet_main "Hello world!"'
#+BEGIN_SRC sh
 _   _        _  _                                  _      _  _ 
| | | |  ___ | || |  ___    __      __  ___   _ __ | |  __| || |
| |_| | / _ \| || | / _ \   \ \ /\ / / / _ \ | '__|| | / _` || |
|  _  ||  __/| || || (_) |   \ V  V / | (_) || |   | || (_| ||_|
|_| |_| \___||_||_| \___/     \_/\_/   \___/ |_|   |_| \__,_|(_)
                                                                
#+END_SRC

* banlet_main standard hello world
Runs banlet_main with the data/font_standard.txt font to print 'Hello world!'

#+TESTY: program='./banlet_main data/font_standard.txt "Hello world!"'
#+BEGIN_SRC sh
 _   _        _  _                                  _      _  _ 
| | | |  ___ | || |  ___    __      __  ___   _ __ | |  __| || |
| |_| | / _ \| || | / _ \   \ \ /\ / / / _ \ | '__|| | / _` || |
|  _  ||  __/| || || (_) |   \ V  V / | (_) || |   | || (_| ||_|
|_| |_| \___||_||_| \___/     \_/\_/   \___/ |_|   |_| \__,_|(_)
                                                                
#+END_SRC

* banlet_main mini hello world
Runs banlet_main with the data/font_mini.txt font to print 'Hello world!'

#+TESTY: program='./banlet_main data/font_mini.txt "Hello world!"'
#+BEGIN_SRC sh
                           
|_| _ || _        _ ._| _||
| |(/_||(_)  \/\/(_)| |(_|o
                           
#+END_SRC


* banlet_main banner hello world
Runs banlet_main with the data/font_banner.txt font to print 'Hello world!'

#+TESTY: program='./banlet_main data/font_banner.txt "Hello world!"'
#+BEGIN_SRC sh
#     #                                                                   ### 
#     # ###### #      #       ####     #    #  ####  #####  #      #####  ### 
#     # #      #      #      #    #    #    # #    # #    # #      #    # ### 
####### #####  #      #      #    #    #    # #    # #    # #      #    #  #  
#     # #      #      #      #    #    # ## # #    # #####  #      #    #     
#     # #      #      #      #    #    ##  ## #    # #   #  #      #    # ### 
#     # ###### ###### ######  ####     #    #  ####  #    # ###### #####  ### 
                                                                              
#+END_SRC

* banlet_main multiline
Runs banlet_main with a builtin font and multiline message

#+TESTY: program="./banlet_main $'To iterate is human,\nto recurse divine.\n-Peter Deutsch'"
#+BEGIN_SRC sh
 _____           _  _                       _            _         _                                        
|_   _|  ___    (_)| |_   ___  _ __   __ _ | |_   ___   (_) ___   | |__   _   _  _ __ ___    __ _  _ __     
  | |   / _ \   | || __| / _ \| '__| / _` || __| / _ \  | |/ __|  | '_ \ | | | || '_ ` _ \  / _` || '_ \    
  | |  | (_) |  | || |_ |  __/| |   | (_| || |_ |  __/  | |\__ \  | | | || |_| || | | | | || (_| || | | | _ 
  |_|   \___/   |_| \__| \___||_|    \__,_| \__| \___|  |_||___/  |_| |_| \__,_||_| |_| |_| \__,_||_| |_|( )
                                                                                                         |/ 
 _                                                             _  _         _                 
| |_   ___     _ __   ___   ___  _   _  _ __  ___   ___     __| |(_)__   __(_) _ __    ___    
| __| / _ \   | '__| / _ \ / __|| | | || '__|/ __| / _ \   / _` || |\ \ / /| || '_ \  / _ \   
| |_ | (_) |  | |   |  __/| (__ | |_| || |   \__ \|  __/  | (_| || | \ V / | || | | ||  __/ _ 
 \__| \___/   |_|    \___| \___| \__,_||_|   |___/ \___|   \__,_||_|  \_/  |_||_| |_| \___|(_)
                                                                                              
        ____         _                  ____                _               _     
       |  _ \   ___ | |_   ___  _ __   |  _ \   ___  _   _ | |_  ___   ___ | |__  
 _____ | |_) | / _ \| __| / _ \| '__|  | | | | / _ \| | | || __|/ __| / __|| '_ \ 
|_____||  __/ |  __/| |_ |  __/| |     | |_| ||  __/| |_| || |_ \__ \| (__ | | | |
       |_|     \___| \__| \___||_|     |____/  \___| \__,_| \__||___/ \___||_| |_|
                                                                                  
#+END_SRC




* banlet_main allcaps bass
Runs banlet_main with a data/font_capsonly.txt font and multiline
message taken from data/bass.txt.

#+TESTY: program='./banlet_main data/font_capsonly.txt "$(cat data/bass.txt)"'
#+BEGIN_SRC sh
 _  __    _     _____  _____   
| |/ /   / \   |_   _||__  / _ 
| ' /   / _ \    | |    / / (_)
| . \  / ___ \   | |   / /_  _ 
|_|\_\/_/   \_\  |_|  /____|(_)
                               
    _     _      _       __   __  ___   _   _  ____  
   / \   | |    | |      \ \ / / / _ \ | | | ||  _ \ 
  / _ \  | |    | |       \ V / | | | || | | || |_) |
 / ___ \ | |___ | |___     | |  | |_| || |_| ||  _ < 
/_/   \_\|_____||_____|    |_|   \___/  \___/ |_| \_\
                                                     
 ____      _     ____   ____        _     ____   _____ 
| __ )    / \   / ___| / ___|      / \   |  _ \ | ____|
|  _ \   / _ \  \___ \ \___ \     / _ \  | |_) ||  _|  
| |_) | / ___ \  ___) | ___) |   / ___ \ |  _ < | |___ 
|____/ /_/   \_\|____/ |____/   /_/   \_\|_| \_\|_____|
                                                       
 ____   _____  _       ___   _   _   ____    _____   ___  
| __ ) | ____|| |     / _ \ | \ | | / ___|  |_   _| / _ \ 
|  _ \ |  _|  | |    | | | ||  \| || |  _     | |  | | | |
| |_) || |___ | |___ | |_| || |\  || |_| |    | |  | |_| |
|____/ |_____||_____| \___/ |_| \_| \____|    |_|   \___/ 
                                                          
 _   _  ____   _  _  _ 
| | | |/ ___| | || || |
| | | |\___ \ | || || |
| |_| | ___) ||_||_||_|
 \___/ |____/ (_)(_)(_)
                       
#+END_SRC


* banlet_main oo.txt
Runs banlet_main with builtin font and multiline message taken from
data/oo.txt.

#+TESTY: program='./banlet_main "$(cat data/oo.txt)"'
#+BEGIN_SRC sh
 _   _                                                                                        _    _                  _ 
| | | |  __ _ __   __  ___    _   _   ___   _   _     ___ __   __  ___  _ __    _ __    ___  | |_ (_)  ___   ___   __| |
| |_| | / _` |\ \ / / / _ \  | | | | / _ \ | | | |   / _ \\ \ / / / _ \| '__|  | '_ \  / _ \ | __|| | / __| / _ \ / _` |
|  _  || (_| | \ V / |  __/  | |_| || (_) || |_| |  |  __/ \ V / |  __/| |     | | | || (_) || |_ | || (__ |  __/| (_| |
|_| |_| \__,_|  \_/   \___|   \__, | \___/  \__,_|   \___|  \_/   \___||_|     |_| |_| \___/  \__||_| \___| \___| \__,_|
                              |___/                                                                                     
 _    _             _      _                        _                        
| |_ | |__    __ _ | |_   | |_  _   _  _ __  _ __  (_) _ __    __ _     __ _ 
| __|| '_ \  / _` || __|  | __|| | | || '__|| '_ \ | || '_ \  / _` |   / _` |
| |_ | | | || (_| || |_   | |_ | |_| || |   | | | || || | | || (_| |  | (_| |
 \__||_| |_| \__,_| \__|   \__| \__,_||_|   |_| |_||_||_| |_| \__, |   \__,_|
                                                              |___/          
                                    _        _              _                        _               _              _ 
 _ __    ___   _ __           ___  | |__    (_)  ___   ___ | |_          ___   _ __ (_)  ___  _ __  | |_   ___   __| |
| '_ \  / _ \ | '_ \  _____  / _ \ | '_ \   | | / _ \ / __|| __| _____  / _ \ | '__|| | / _ \| '_ \ | __| / _ \ / _` |
| | | || (_) || | | ||_____|| (_) || |_) |  | ||  __/| (__ | |_ |_____|| (_) || |   | ||  __/| | | || |_ |  __/| (_| |
|_| |_| \___/ |_| |_|        \___/ |_.__/  _/ | \___| \___| \__|        \___/ |_|   |_| \___||_| |_| \__| \___| \__,_|
                                          |__/                                                                        
                                                      _         _                          
 _ __   _ __   ___    __ _  _ __   __ _  _ __ ___    (_) _ __  | |_   ___      __ _  _ __  
| '_ \ | '__| / _ \  / _` || '__| / _` || '_ ` _ \   | || '_ \ | __| / _ \    / _` || '_ \ 
| |_) || |   | (_) || (_| || |   | (_| || | | | | |  | || | | || |_ | (_) |  | (_| || | | |
| .__/ |_|    \___/  \__, ||_|    \__,_||_| |_| |_|  |_||_| |_| \__| \___/    \__,_||_| |_|
|_|                  |___/                                                                 
        _        _              _                        _               _              _                          _        
  ___  | |__    (_)  ___   ___ | |_          ___   _ __ (_)  ___  _ __  | |_   ___   __| |    ___   _ __    ___   (_) _ __  
 / _ \ | '_ \   | | / _ \ / __|| __| _____  / _ \ | '__|| | / _ \| '_ \ | __| / _ \ / _` |   / _ \ | '_ \  / _ \  | || '_ \ 
| (_) || |_) |  | ||  __/| (__ | |_ |_____|| (_) || |   | ||  __/| | | || |_ |  __/| (_| |  | (_) || | | ||  __/  | || | | |
 \___/ |_.__/  _/ | \___| \___| \__|        \___/ |_|   |_| \___||_| |_| \__| \___| \__,_|   \___/ |_| |_| \___|  |_||_| |_|
              |__/                                                                                                          
 _    _                                             _                                                    _    _             _   
| |_ | |__    ___    ___   __ _  _ __ ___    ___   | |  __ _  _ __    __ _  _   _   __ _   __ _   ___   | |_ | |__    __ _ | |_ 
| __|| '_ \  / _ \  / __| / _` || '_ ` _ \  / _ \  | | / _` || '_ \  / _` || | | | / _` | / _` | / _ \  | __|| '_ \  / _` || __|
| |_ | | | ||  __/  \__ \| (_| || | | | | ||  __/  | || (_| || | | || (_| || |_| || (_| || (_| ||  __/  | |_ | | | || (_| || |_ 
 \__||_| |_| \___|  |___/ \__,_||_| |_| |_| \___|  |_| \__,_||_| |_| \__, | \__,_| \__,_| \__, | \___|   \__||_| |_| \__,_| \__|
                                                                     |___/                |___/                                 
     _                      _    _                                             _    _      _               
  __| |  ___    ___  ___   | |_ | |__    ___    ___   __ _  _ __ ___    ___   | |_ | |__  (_) _ __    __ _ 
 / _` | / _ \  / _ \/ __|  | __|| '_ \  / _ \  / __| / _` || '_ ` _ \  / _ \  | __|| '_ \ | || '_ \  / _` |
| (_| || (_) ||  __/\__ \  | |_ | | | ||  __/  \__ \| (_| || | | | | ||  __/  | |_ | | | || || | | || (_| |
 \__,_| \___/  \___||___/   \__||_| |_| \___|  |___/ \__,_||_| |_| |_| \___|   \__||_| |_||_||_| |_| \__, |
                                                                                                     |___/ 
                              _    _         _  _               _                _      _               _  _        
  ___  ___  ___   ___  _ __  | |_ (_)  __ _ | || | _   _     __| |  ___   _   _ | |__  | |  ___  ___   (_)| |_  ___ 
 / _ \/ __|/ __| / _ \| '_ \ | __|| | / _` || || || | | |   / _` | / _ \ | | | || '_ \ | | / _ \/ __|  | || __|/ __|
|  __/\__ \\__ \|  __/| | | || |_ | || (_| || || || |_| |  | (_| || (_) || |_| || |_) || ||  __/\__ \  | || |_ \__ \
 \___||___/|___/ \___||_| |_| \__||_| \__,_||_||_| \__, |   \__,_| \___/  \__,_||_.__/ |_| \___||___/  |_| \__||___/
                                                   |___/                                                            
      _             ___      _____                 _  _                                   _    _                           
 ___ (_) ____  ___ |__ \    |_   _| _ __  _   _   (_)| |_    ___   ___   _ __ ___    ___ | |_ (_) _ __ ___    ___          
/ __|| ||_  / / _ \  / /      | |  | '__|| | | |  | || __|  / __| / _ \ | '_ ` _ \  / _ \| __|| || '_ ` _ \  / _ \         
\__ \| | / / |  __/ |_|       | |  | |   | |_| |  | || |_   \__ \| (_) || | | | | ||  __/| |_ | || | | | | ||  __/ _  _  _ 
|___/|_|/___| \___| (_)       |_|  |_|    \__, |  |_| \__|  |___/ \___/ |_| |_| |_| \___| \__||_||_| |_| |_| \___|(_)(_)(_)
                                          |___/                                                                            
        ____   _                        __   __                          
       / ___| | |_   ___ __   __  ___   \ \ / /  ___   __ _   __ _   ___ 
 _____ \___ \ | __| / _ \\ \ / / / _ \   \ V /  / _ \ / _` | / _` | / _ \
|_____| ___) || |_ |  __/ \ V / |  __/    | |  |  __/| (_| || (_| ||  __/
       |____/  \__| \___|  \_/   \___|    |_|   \___| \__, | \__, | \___|
                                                      |___/  |___/       
#+END_SRC

* banlet_main mini oo.txt
Runs banlet_main with builtin data/font_mini.txt font and multiline
message taken from data/oo.txt.

#+TESTY: program='./banlet_main data/font_mini.txt "$(cat data/oo.txt)"'
#+BEGIN_SRC sh
                                                     
|_| _.   _      _       _    _ ._  ._  _ _|_o _ _  _|
| |(_|\/(/_  \/(_)|_|  (/_\/(/_|   | |(_) |_|(_(/_(_|
             /                                       
                                     
_|_|_  _._|_  _|_   ._._ o._  _    _.
 |_| |(_| |_   |_|_|| | ||| |(_|  (_|
                              _|     
                                                  
._  _ ._ __ _ |_  o _  __|___ _ ._o _ ._ _|_ _  _|
| |(_)| |  (_)|_) |(/_(_ |_  (_)| |(/_| | |_(/_(_|
                 _|                               
                                         
._ ._ _  _ ._ _.._ _   o._ _|_ _    _.._ 
|_)| (_)(_|| (_|| | |  || | |_(_)  (_|| |
|        _|                              
                                                        
 _ |_  o _  __|___ _ ._o _ ._ _|_ _  _|   _ ._  _   o._ 
(_)|_) |(/_(_ |_  (_)| |(/_| | |_(/_(_|  (_)| |(/_  || |
      _|                                                
                                                              
_|_|_  _    _ _.._ _  _   | _.._  _     _. _  _   _|_|_  _._|_
 |_| |(/_  _>(_|| | |(/_  |(_|| |(_||_|(_|(_|(/_   |_| |(_| |_
                                  _|       _|                 
                                                    
 _| _  _  _  _|_|_  _    _ _.._ _  _   _|_|_ o._  _ 
(_|(_)(/__>   |_| |(/_  _>(_|| | |(/_   |_| ||| |(_|
                                                  _|
                                                    
 _  _ _ _ ._ _|_o _.||     _| _    |_ | _  _  o_|_ _
(/__>_>(/_| | |_|(_|||\/  (_|(_)|_||_)|(/__>  | |__>
                      /                             
        _     ___                                        
 _o_  _  )     | ._    o_|_   _ _ ._ _  _ _|_o._ _  _    
_>|/_(/_o      | | \/  | |_  _>(_)| | |(/_ |_|| | |(/_ooo
                   /                                     
   __                            
__(_ _|_ _    _   \_/ _  _  _  _ 
  __) |_(/_\/(/_   | (/_(_|(_|(/_
                         _| _|   

#+END_SRC

