#+TITLE: Problem 1 First 5 Functions in banlet_funcs.c
#+TESTY: PREFIX="prob1"

* string_replace_char_1
#+TESTY: program='./test_banlet_funcs1 string_replace_char_1'
#+BEGIN_SRC sh
{
    // Tests replacing characters in a string
    char string[]="A A B B A";
    string_replace_char(string, 'A', 'X');
    printf("result: '%s'\n", string);
}
result: 'X X B B X'
#+END_SRC

* string_replace_char_2
#+TESTY: program='./test_banlet_funcs1 string_replace_char_2'
#+BEGIN_SRC sh
{
    // Tests replacing characters in a string
    char string[]="A A B B A";
    string_replace_char(string, 'B', 'Y');
    printf("result: '%s'\n", string);
}
result: 'A A Y Y A'
#+END_SRC

* string_replace_char_3
#+TESTY: program='./test_banlet_funcs1 string_replace_char_3'
#+BEGIN_SRC sh
{
    // Tests replacing characters in a string
    char string[]="A A B B A";
    string_replace_char(string, ' ', '-');
    printf("result: '%s'\n", string);
}
result: 'A-A-B-B-A'
#+END_SRC

* string_replace_char_4
#+TESTY: program='./test_banlet_funcs1 string_replace_char_4'
#+BEGIN_SRC sh
{
    // Tests replacing characters in a string
    char string[]=
      "Four score and seven years ago our forefathers brought forth...";
    string_replace_char(string, 'F', 'P');
    string_replace_char(string, 'f', 'p');
    printf("result: '%s'\n", string);
}
result: 'Pour score and seven years ago our porepathers brought porth...'
#+END_SRC

* count_linebreaks_1
#+TESTY: program='./test_banlet_funcs1 count_linebreaks_1'
#+BEGIN_SRC sh
{
    // Tests counting linebreaks (\n and end of string) in a string
    char string[]="Hi";
    int count = count_linebreaks(string);
    printf("result: %d\n", count);
}
result: 1
#+END_SRC

* count_linebreaks_2
#+TESTY: program='./test_banlet_funcs1 count_linebreaks_2'
#+BEGIN_SRC sh
{
    // Tests counting linebreaks (\n and end of string) in a string
    char string[]="O\nM\nG";
    int count = count_linebreaks(string);
    printf("result: %d\n", count);
}
result: 3
#+END_SRC

* count_linebreaks_3
#+TESTY: program='./test_banlet_funcs1 count_linebreaks_3'
#+BEGIN_SRC sh
{
    // Tests counting linebreaks (\n and end of string) in a string
    char string[]=
      "If you lie to\nthe compiler,\nit will get\nits revenge.\n-Henry Spencer";
    int count = count_linebreaks(string);
    printf("result: %d\n", count);
}
result: 5
#+END_SRC

* find_linebreaks_1
#+TESTY: program='./test_banlet_funcs1 find_linebreaks_1'
#+BEGIN_SRC sh
{
    // Tests locating linebreak indices in a string
    char string[]="Hi";
    int count = -1;
    int *linebreaks = find_linebreaks(string, &count);
    printf("count: %d\n",count);
    printf("array: "); print_int_array(linebreaks, count); printf("\n");
    free(linebreaks);
}
count: 1
array: [ 2]
#+END_SRC

* find_linebreaks_2
#+TESTY: program='./test_banlet_funcs1 find_linebreaks_2'
#+BEGIN_SRC sh
{
    // Tests locating linebreak indices in a string
    char string[]="O\nM\nG";
    int count = -1;
    int *linebreaks = find_linebreaks(string, &count);
    printf("count: %d\n",count);
    printf("array: "); print_int_array(linebreaks, count); printf("\n");
    free(linebreaks);
}
count: 3
array: [ 1,  3,  5]
#+END_SRC

* find_linebreaks_3
#+TESTY: program='./test_banlet_funcs1 find_linebreaks_3'
#+BEGIN_SRC sh
{
    // Tests locating linebreak indices in a string
    char string[]="If you lie to\nthe compiler,\nit will get\nits revenge.\n-Henry Spencer";
    int count = -1;
    int *linebreaks = find_linebreaks(string, &count);
    printf("count: %d\n",count);
    printf("array: "); print_int_array(linebreaks, count); printf("\n");
    free(linebreaks);
}
count: 5
array: [13, 27, 39, 52, 67]
#+END_SRC

* find_linebreaks_4
#+TESTY: program='./test_banlet_funcs1 find_linebreaks_4'
#+BEGIN_SRC sh
{
    // Tests locating linebreak indices in a string
    char string[]="10\n20\n30\n40 50\n60 70 80\n 90\n100\n110 120\n130";
    int count = -1;
    int *linebreaks = find_linebreaks(string, &count);
    printf("count: %d\n",count);
    printf("array: "); print_int_array(linebreaks, count); printf("\n");
    free(linebreaks);
}
count: 9
array: [ 2,  5,  8, 14, 23, 27, 31, 39, 43]
#+END_SRC

* print_fontified_1
#+TESTY: program='./test_banlet_funcs1 print_fontified_1'
#+BEGIN_SRC sh
{
    // Tests print_fontified function with builtin font_standard
    char string[]="Hello world!";
    print_fontified(string, strlen(string), &font_standard);
}
 _   _        _  _                                  _      _  _ 
| | | |  ___ | || |  ___    __      __  ___   _ __ | |  __| || |
| |_| | / _ \| || | / _ \   \ \ /\ / / / _ \ | '__|| | / _` || |
|  _  ||  __/| || || (_) |   \ V  V / | (_) || |   | || (_| ||_|
|_| |_| \___||_||_| \___/     \_/\_/   \___/ |_|   |_| \__,_|(_)
                                                                
#+END_SRC

* print_fontified_2
#+TESTY: program='./test_banlet_funcs1 print_fontified_2'
#+BEGIN_SRC sh
{
    // Tests print_fontified function with builtin font_standard
    char string[]="Holy $#!^ it's working. I'm, frankly, shocked.";
    print_fontified(string, strlen(string), &font_standard);
}
 _   _         _            _     _  _    _  /\    _  _    _                                _     _                     ___  _                   __                      _     _                   _                   _               _    
| | | |  ___  | | _   _    | |  _| || |_ | ||/\|  (_)| |_ ( ) ___   __      __  ___   _ __ | | __(_) _ __    __ _      |_ _|( ) _ __ ___        / _| _ __   __ _  _ __  | | __| | _   _       ___ | |__    ___    ___ | | __  ___   __| |   
| |_| | / _ \ | || | | |  / __)|_  ..  _|| |      | || __||/ / __|  \ \ /\ / / / _ \ | '__|| |/ /| || '_ \  / _` |      | | |/ | '_ ` _ \      | |_ | '__| / _` || '_ \ | |/ /| || | | |     / __|| '_ \  / _ \  / __|| |/ / / _ \ / _` |   
|  _  || (_) || || |_| |  \__ \|_      _||_|      | || |_    \__ \   \ V  V / | (_) || |   |   < | || | | || (_| | _    | |    | | | | | | _   |  _|| |   | (_| || | | ||   < | || |_| | _   \__ \| | | || (_) || (__ |   < |  __/| (_| | _ 
|_| |_| \___/ |_| \__, |  (   /  |_||_|  (_)      |_| \__|   |___/    \_/\_/   \___/ |_|   |_|\_\|_||_| |_| \__, |(_)  |___|   |_| |_| |_|( )  |_|  |_|    \__,_||_| |_||_|\_\|_| \__, |( )  |___/|_| |_| \___/  \___||_|\_\ \___| \__,_|(_)
                  |___/    |_|                                                                              |___/                         |/                                      |___/ |/                                                  
#+END_SRC

* print_fontified_3
#+TESTY: program='./test_banlet_funcs1 print_fontified_3'
#+BEGIN_SRC sh
{
    // Tests print_fontified function with builtin font_standard
    char *string;
    string = "The quick brown fox";
    print_fontified(string, strlen(string), &font_standard);
    string = "jumps OVER the lazy";
    print_fontified(string, strlen(string), &font_standard);
    string = "dog.";
    print_fontified(string, strlen(string), &font_standard);
}
 _____  _                            _        _       _                                       __              
|_   _|| |__    ___     __ _  _   _ (_)  ___ | | __  | |__   _ __   ___  __      __ _ __     / _|  ___  __  __
  | |  | '_ \  / _ \   / _` || | | || | / __|| |/ /  | '_ \ | '__| / _ \ \ \ /\ / /| '_ \   | |_  / _ \ \ \/ /
  | |  | | | ||  __/  | (_| || |_| || || (__ |   <   | |_) || |   | (_) | \ V  V / | | | |  |  _|| (_) | >  < 
  |_|  |_| |_| \___|   \__, | \__,_||_| \___||_|\_\  |_.__/ |_|    \___/   \_/\_/  |_| |_|  |_|   \___/ /_/\_\
                          |_|                                                                                 
   _                                   ___  __     __ _____  ____     _    _              _                    
  (_) _   _  _ __ ___   _ __   ___    / _ \ \ \   / /| ____||  _ \   | |_ | |__    ___   | |  __ _  ____ _   _ 
  | || | | || '_ ` _ \ | '_ \ / __|  | | | | \ \ / / |  _|  | |_) |  | __|| '_ \  / _ \  | | / _` ||_  /| | | |
  | || |_| || | | | | || |_) |\__ \  | |_| |  \ V /  | |___ |  _ <   | |_ | | | ||  __/  | || (_| | / / | |_| |
 _/ | \__,_||_| |_| |_|| .__/ |___/   \___/    \_/   |_____||_| \_\   \__||_| |_| \___|  |_| \__,_|/___| \__, |
|__/                   |_|                                                                               |___/ 
     _                  
  __| |  ___    __ _    
 / _` | / _ \  / _` |   
| (_| || (_) || (_| | _ 
 \__,_| \___/  \__, |(_)
               |___/    
#+END_SRC

* print_fontified_4
#+TESTY: program='./test_banlet_funcs1 print_fontified_4'
#+BEGIN_SRC sh
{
    // Tests print_fontified function with builtin font_standard
    char *string;
    string = " !\"#$%&'()";
    print_fontified(string, strlen(string), &font_standard);
    string = "*+,-./0123";
    print_fontified(string, strlen(string), &font_standard);
    string = "456789:;<=";
    print_fontified(string, strlen(string), &font_standard);
    string = ">?@ABCDEFG";
    print_fontified(string, strlen(string), &font_standard);
    string = "HIJKLMNOPQ";
    print_fontified(string, strlen(string), &font_standard);
    string = "RSTUVWXYZ[";
    print_fontified(string, strlen(string), &font_standard);
    string = "\\]^_`abcde";
    print_fontified(string, strlen(string), &font_standard);
    string = "fghijklmno";
    print_fontified(string, strlen(string), &font_standard);
    string = "pqrstuvwxy";
    print_fontified(string, strlen(string), &font_standard);
    string = "z{|}~";
    print_fontified(string, strlen(string), &font_standard);
}
   _  _ _    _  _     _   _  __  ___    _   ____  
  | |( | ) _| || |_  | | (_)/ / ( _ )  ( ) / /\ \ 
  | | V V |_  ..  _|/ __)  / /  / _ \/\|/ | |  | |
  |_|     |_      _|\__ \ / /_ | (_>  <   | |  | |
  (_)       |_||_|  (   //_/(_) \___/\/   | |  | |
                     |_|                   \_\/_/ 
                              __  ___   _  ____   _____ 
__/\__   _                   / / / _ \ / ||___ \ |___ / 
\    / _| |_     _____      / / | | | || |  __) |  |_ \ 
/_  _\|_   _| _ |_____| _  / /  | |_| || | / __/  ___) |
  \/    |_|  ( )       (_)/_/    \___/ |_||_____||____/ 
             |/                                         
 _  _    ____    __    _____   ___    ___          __       
| || |  | ___|  / /_  |___  | ( _ )  / _ \  _  _  / / _____ 
| || |_ |___ \ | '_ \    / /  / _ \ | (_) |(_)(_)/ / |_____|
|__   _| ___) || (_) |  / /  | (_) | \__, | _  _ \ \ |_____|
   |_|  |____/  \___/  /_/    \___/    /_/ (_)( ) \_\       
                                              |/            
__   ___    ____      _     ____    ____  ____   _____  _____   ____ 
\ \ |__ \  / __ \    / \   | __ )  / ___||  _ \ | ____||  ___| / ___|
 \ \  / / / / _` |  / _ \  |  _ \ | |    | | | ||  _|  | |_   | |  _ 
 / / |_| | | (_| | / ___ \ | |_) || |___ | |_| || |___ |  _|  | |_| |
/_/  (_)  \ \__,_|/_/   \_\|____/  \____||____/ |_____||_|     \____|
           \____/                                                    
 _   _  ___      _  _  __ _      __  __  _   _   ___   ____    ___  
| | | ||_ _|    | || |/ /| |    |  \/  || \ | | / _ \ |  _ \  / _ \ 
| |_| | | |  _  | || ' / | |    | |\/| ||  \| || | | || |_) || | | |
|  _  | | | | |_| || . \ | |___ | |  | || |\  || |_| ||  __/ | |_| |
|_| |_||___| \___/ |_|\_\|_____||_|  |_||_| \_| \___/ |_|     \__\_\
                                                                    
 ____   ____   _____  _   _ __     ____        ____  ____   __ _____ __ 
|  _ \ / ___| |_   _|| | | |\ \   / /\ \      / /\ \/ /\ \ / /|__  /| _|
| |_) |\___ \   | |  | | | | \ \ / /  \ \ /\ / /  \  /  \ V /   / / | | 
|  _ <  ___) |  | |  | |_| |  \ V /    \ V  V /   /  \   | |   / /_ | | 
|_| \_\|____/   |_|   \___/    \_/      \_/\_/   /_/\_\  |_|  /____|| | 
                                                                    |__|
__     __  /\         _         _                _       
\ \   |_ ||/\|       ( )  __ _ | |__    ___   __| |  ___ 
 \ \   | |            \| / _` || '_ \  / __| / _` | / _ \
  \ \  | |              | (_| || |_) || (__ | (_| ||  __/
   \_\ | |     _____     \__,_||_.__/  \___| \__,_| \___|
      |__|    |_____|                                    
  __         _      _    _  _     _                          
 / _|  __ _ | |__  (_)  (_)| | __| | _ __ ___   _ __    ___  
| |_  / _` || '_ \ | |  | || |/ /| || '_ ` _ \ | '_ \  / _ \ 
|  _|| (_| || | | || |  | ||   < | || | | | | || | | || (_) |
|_|   \__, ||_| |_||_| _/ ||_|\_\|_||_| |_| |_||_| |_| \___/ 
      |___/           |__/                                   
                          _                                        
 _ __    __ _  _ __  ___ | |_  _   _ __   ____      ____  __ _   _ 
| '_ \  / _` || '__|/ __|| __|| | | |\ \ / /\ \ /\ / /\ \/ /| | | |
| |_) || (_| || |   \__ \| |_ | |_| | \ V /  \ V  V /  >  < | |_| |
| .__/  \__, ||_|   |___/ \__| \__,_|  \_/    \_/\_/  /_/\_\ \__, |
|_|        |_|                                               |___/ 
        __ _ __    /\/|
 ____  / /| |\ \  |/\/ 
|_  / | | | | | |      
 / / < <  | |  > >     
/___| | | | | | |      
       \_\|_|/_/       
#+END_SRC

